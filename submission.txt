################################################################################                     
                    COMP90018 Programming Project Submission
################################################################################

Group No: #Group-W01/10-4

Group Members:

1: [Alan Ung, alanu@student.unimelb.edu.au] 
2: [Eldar Kurmakaev, ekurmakaev@student.unimelb.edu.au] 
3: [Haohai Liu, haohail@student.unimelb.edu.au] 
4: [Min Zhao, min.zhao1@student.unimelb.edu.au] 
5: [Qifan Deng, qifand@student.unimelb.edu.au] 
6: [Steven Tang, stevent2@student.unimelb.edu.au]

YouTube Link: 

README:
 
Prerequisite:
 - Android Studio 4.1
 - Android SDK which can be obtained when launch Android Studio first time. 
   Version: >=2.7.0 && <3.0.0
 - Flutter installation
 - Dart installation : Dart will be automatically installed
 - Android phone or emulator with API level 30 with google player services(for firebase)

Building and Running: 
IN Android Studio
1. Clone this repository locally.
2. Open Android Studio, select menu item File -> Open and open the root of 
   your local repository.
3. Before build and run, make sure the Android emulator is available. Select 
   menu item Tool -> AVD manager. Click button if there is no Android virtual 
   machine, then follow the guideline to complete the installation, this process 
   may take a little bit of time. After that, select and launch one emulator 
   in the list of Android Virtual Devices Manager window.
4. To build and run the app, select menu item Run -> Run and then in the popup 
   dialog, select smart broccoli app

Code structure:
1. Backend: see https://github.com/comp90018-2020/smart-broccoli/blob/master/backend/README.md
2. Base: <smart-broccoli/lib/src/base> 

   Contains supporting classes for the entire application.

3. Data: <smart-broccoli/lib/src/data> 

   Contains domain objects and Data Transfer Objects. Including: User, Quiz, Game, Group, Answer 
   and Outcome. Please refer to the file for detailed attributes of each data type defined here.

4. Frontend: <smart-broccoli/lib/src/ui>  

   Contains all the UI pages of this repository. These sub packages are rough grouping of the 
   features for code separation. They do not have one-to-one correspondence with the features 
   defined in our Requirement Document.

   - /auth: UI for making account associations. Including login and sign up.
   - /group and /groups: UI of group management, including group creation and list of groups. Also 
     including quiz tap which allows for switching quiz type in take quiz page
   - /profile: User profile UI and management 
   - /quiz and /quiz_creator: Quiz card UI, including UI of quiz creation, quiz management, question 
     creation. Also including UI of quiz notification settings page
   - /session: Session UI pages. Contains waiting lobby page, question page, answer page, and 
     leaderboard page
   - /shared: Custom components used by all UI pages.
   - /about: Acknowledgement and LICENSE UI

5. Sensor: <smart-broccoli/lib/src/background>

   Sensors implementation. 

6. Services: <smart-broccoli/lib/src/models> and <smart-broccoli/lib/src/store>

   - Used for storing and updating logic state, and be as a middle layer service
   - Contains APIs that used for data transfer between server and UI pages

Please include details on how to compile and run your APP.
