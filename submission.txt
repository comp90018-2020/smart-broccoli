################################################################################
                    COMP90018 Programming Project Submission
################################################################################

Group No: #Group-W01/10-4

Group Members:

1: [Qifan Deng, qifand@student.unimelb.edu.au]
2: [Eldar Kurmakaev, ekurmakaev@student.unimelb.edu.au]
3: [Haohai Liu, haohail@student.unimelb.edu.au]
4: [Steven Tang, stevent2@student.unimelb.edu.au]
5: [Alan Ung, alanu@student.unimelb.edu.au]
6: [Min Zhao, min.zhao1@student.unimelb.edu.au]

YouTube Link: https://youtu.be/FaRWcm23kP4

README:

Prerequisite:
 - Android Studio 4.1
 - Android SDK which can be obtained when launch Android Studio first time.
   Version: >=2.7.0 && <3.0.0
 - Flutter
 - Android phone or emulator with API level 30 with google player services (for firebase)

Building and Running:
In Android Studio
1. Clone this repository locally.
2. Open Android Studio, select File -> Open and open the root of your local repository.
3. Before build and run, make sure the Android emulator is available.
   Select menu item Tool -> AVD manager. Click button if there is no Android virtual
   machine, then follow the guideline to complete the installation, this process
   may take a little bit of time. After that, select and launch one emulator
   in the list of Android Virtual Devices Manager window.
4. To build and run the app, select Run -> Run and then in the popup
   dialog, select the smart broccoli app.

Code structure:
- Backend: see backend README
- Base: <lib/src/base>
   Contains supporting classes.
- Data: <lib/src/data>
   Contains domain and data transfer objects. Includes: User, Quiz, Game, Group, Answer and Outcome.
   Please refer to the file for detailed attributes of each data type defined here.
- Frontend: <lib/src/ui>
   Contains all UI pages. These submodules are groupings of features for code separation.
   - /about: Acknowledgement and LICENSE pages.
   - /auth: UI for registration and login, including joining as a participant.
   - /group and /groups: UI of group management, including group creation and listing.
     Also includes quiz tabs which allows for switching between different quiz types.
   - /notification: Notification settings.
   - /profile: User profile and management.
   - /quiz and /quiz_creator: Quiz card UI, including UI of quiz creation and management.
     Also including UI of quiz notification settings page
   - /session: Session UI pages. Contains waiting lobby page, question page, answer page, and
     leaderboard page.
   - /shared: Custom components used by all UI pages.
- Sensor: <lib/src/background>
   Sensors implementation.
- Services: <lib/src/models> and <lib/src/store>
   - Used for storing and updating logic state, and be as a middle layer service
   - Contains APIs that used for data transfer between server and UI pages
